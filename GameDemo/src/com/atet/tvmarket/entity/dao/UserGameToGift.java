package com.atet.tvmarket.entity.dao;

import com.atet.tvmarket.entity.dao.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table USER_GAME_TO_GIFT.
 */
public class UserGameToGift implements java.io.Serializable {

    private Long id;
    private Integer returnOrder;
    /** Not-null value. */
    private String gameId;
    /** Not-null value. */
    private String giftPackageid;
    /** Not-null value. */
    private String userId;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient UserGameToGiftDao myDao;

    private UserGiftInfo userGiftInfo;
    private String userGiftInfo__resolvedKey;

    private UserGameGiftInfo userGameGiftInfo;
    private String userGameGiftInfo__resolvedKey;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public UserGameToGift() {
    }

    public UserGameToGift(Long id) {
        this.id = id;
    }

    public UserGameToGift(Long id, Integer returnOrder, String gameId, String giftPackageid, String userId) {
        this.id = id;
        this.returnOrder = returnOrder;
        this.gameId = gameId;
        this.giftPackageid = giftPackageid;
        this.userId = userId;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getUserGameToGiftDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Integer getReturnOrder() {
        return returnOrder;
    }

    public void setReturnOrder(Integer returnOrder) {
        this.returnOrder = returnOrder;
    }

    /** Not-null value. */
    public String getGameId() {
        return gameId;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setGameId(String gameId) {
        this.gameId = gameId;
    }

    /** Not-null value. */
    public String getGiftPackageid() {
        return giftPackageid;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setGiftPackageid(String giftPackageid) {
        this.giftPackageid = giftPackageid;
    }

    /** Not-null value. */
    public String getUserId() {
        return userId;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setUserId(String userId) {
        this.userId = userId;
    }

    /** To-one relationship, resolved on first access. */
    public UserGiftInfo getUserGiftInfo() {
        String __key = this.giftPackageid;
        if (userGiftInfo__resolvedKey == null || userGiftInfo__resolvedKey != __key) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            UserGiftInfoDao targetDao = daoSession.getUserGiftInfoDao();
            UserGiftInfo userGiftInfoNew = targetDao.load(__key);
            synchronized (this) {
                userGiftInfo = userGiftInfoNew;
            	userGiftInfo__resolvedKey = __key;
            }
        }
        return userGiftInfo;
    }

    public void setUserGiftInfo(UserGiftInfo userGiftInfo) {
        if (userGiftInfo == null) {
            throw new DaoException("To-one property 'giftPackageid' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.userGiftInfo = userGiftInfo;
            giftPackageid = userGiftInfo.getGiftPackageid();
            userGiftInfo__resolvedKey = giftPackageid;
        }
    }

    /** To-one relationship, resolved on first access. */
    public UserGameGiftInfo getUserGameGiftInfo() {
        String __key = this.gameId;
        if (userGameGiftInfo__resolvedKey == null || userGameGiftInfo__resolvedKey != __key) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            UserGameGiftInfoDao targetDao = daoSession.getUserGameGiftInfoDao();
            UserGameGiftInfo userGameGiftInfoNew = targetDao.load(__key);
            synchronized (this) {
                userGameGiftInfo = userGameGiftInfoNew;
            	userGameGiftInfo__resolvedKey = __key;
            }
        }
        return userGameGiftInfo;
    }

    public void setUserGameGiftInfo(UserGameGiftInfo userGameGiftInfo) {
        if (userGameGiftInfo == null) {
            throw new DaoException("To-one property 'gameId' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.userGameGiftInfo = userGameGiftInfo;
            gameId = userGameGiftInfo.getGameid();
            userGameGiftInfo__resolvedKey = gameId;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
	@Override
	public String toString() {
		return "UserGameToGift [id=" + id + ", returnOrder=" + returnOrder
				+ ", gameId=" + gameId + ", giftPackageid=" + giftPackageid
				+ ", userId=" + userId + ", userGiftInfo=" + userGiftInfo + "]";
	}
    // KEEP METHODS END

}
